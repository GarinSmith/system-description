{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u2693\ufe0e The System Description provides a high-level view of the EOEPCA architecture as a set of components (building blocks). It provides an entry-point description that focuses on the building-blocks, their interfaces and relationships. A description of each building block is provided to include: Overview of its role and functional capabilities Interfaces Provided Dependencies (incl. interfaces consumed)","title":"Introduction"},{"location":"#introduction","text":"The System Description provides a high-level view of the EOEPCA architecture as a set of components (building blocks). It provides an entry-point description that focuses on the building-blocks, their interfaces and relationships. A description of each building block is provided to include: Overview of its role and functional capabilities Interfaces Provided Dependencies (incl. interfaces consumed)","title":"Introduction"},{"location":"iam/login-service/","text":"Login Service [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Login Service [TODO]"},{"location":"iam/login-service/#login-service-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"Login Service [TODO]"},{"location":"iam/login-service/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"iam/login-service/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"iam/login-service/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"iam/login-service/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"iam/pdp/","text":"PDP - Policy Decision Point [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"PDP - Policy Decision Point [TODO]"},{"location":"iam/pdp/#pdp-policy-decision-point-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"PDP - Policy Decision Point [TODO]"},{"location":"iam/pdp/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"iam/pdp/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"iam/pdp/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"iam/pdp/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"iam/pep/","text":"PEP - Policy Enforcement Point [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"PEP - Policy Enforcement Point [TODO]"},{"location":"iam/pep/#pep-policy-enforcement-point-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"PEP - Policy Enforcement Point [TODO]"},{"location":"iam/pep/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"iam/pep/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"iam/pep/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"iam/pep/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"iam/resource-guard/","text":"Resource Guard \u2693\ufe0e Description \u2693\ufe0e The Resource Guard provides protection of a Resource Server by application of two sub-components: UMA User Agent Integrates with nginx by providing an auth_request endpoint through which nginx reverse-proxy (ingress controller) can obtain authorization before proxying a request. Defers to the PEP for the policy enforcement. The UMA User Agent acts as a UMA client in its interactions with the PEP, and interfaces to the Token Endpoint of the system Authorization Server to follow the UMA flow. Policy Enforcement Point (PEP) Integrates with the UMA User Agent by providing an auth_request endpoint through which the UMA User Agent can obtain authorization as a UMA client. The PEP integrates with the system Authorization Server to engage in the UMA flow. Both the UMA User Agent and the PEP offer an HTTP interface in accordance with the nginx module ngx_http_auth_request_module . The authorization flow chains nginx -> UMA User Agent -> PEP , as illustrated in the following sequence diagram. Thus the Resource Guard is deployed as a UMA User Agent / Policy Enforcement Point pair that have been coherently configured to protect a given Resource Server . For more information see the descriptions of the UMA User Agent and Policy Enforcement Point . Interfaces \u2693\ufe0e See the interface specifications for the UMA User Agent and Policy Enforcement Point . Dependencies \u2693\ufe0e The Resource Guard is an \u2018umbrella\u2019 component that comprises and so entirely depends upon the UMA User Agent and Policy Enforcement Point . Additional Information \u2693\ufe0e The Resource Guard is deployed using the helm chart that is available at the EOEPCA Helm Chart Repository .","title":"Resource Guard"},{"location":"iam/resource-guard/#resource-guard","text":"","title":"Resource Guard"},{"location":"iam/resource-guard/#description","text":"The Resource Guard provides protection of a Resource Server by application of two sub-components: UMA User Agent Integrates with nginx by providing an auth_request endpoint through which nginx reverse-proxy (ingress controller) can obtain authorization before proxying a request. Defers to the PEP for the policy enforcement. The UMA User Agent acts as a UMA client in its interactions with the PEP, and interfaces to the Token Endpoint of the system Authorization Server to follow the UMA flow. Policy Enforcement Point (PEP) Integrates with the UMA User Agent by providing an auth_request endpoint through which the UMA User Agent can obtain authorization as a UMA client. The PEP integrates with the system Authorization Server to engage in the UMA flow. Both the UMA User Agent and the PEP offer an HTTP interface in accordance with the nginx module ngx_http_auth_request_module . The authorization flow chains nginx -> UMA User Agent -> PEP , as illustrated in the following sequence diagram. Thus the Resource Guard is deployed as a UMA User Agent / Policy Enforcement Point pair that have been coherently configured to protect a given Resource Server . For more information see the descriptions of the UMA User Agent and Policy Enforcement Point .","title":"Description"},{"location":"iam/resource-guard/#interfaces","text":"See the interface specifications for the UMA User Agent and Policy Enforcement Point .","title":"Interfaces"},{"location":"iam/resource-guard/#dependencies","text":"The Resource Guard is an \u2018umbrella\u2019 component that comprises and so entirely depends upon the UMA User Agent and Policy Enforcement Point .","title":"Dependencies"},{"location":"iam/resource-guard/#additional-information","text":"The Resource Guard is deployed using the helm chart that is available at the EOEPCA Helm Chart Repository .","title":"Additional Information"},{"location":"iam/uma-user-agent/","text":"UMA User Agent \u2693\ufe0e Description \u2693\ufe0e The UMA User Agent implements a UMA (User Managed Access) client to obtain an access token on behalf of the end-user. All access attempts to a Resource Server, (e.g. Catalogue, Data Access, ADES, etc.), are subject to the policy enforcement of the PEP (Policy Enforcement Point). For reasons of performance, it is desirable for Nginx to act as the reverse-proxy in this protection flow, rather than the proxy function of the PEP which is not designed for large numbers of concurrent requests or large data volumes. Through the Module ngx_http_auth_request_module , Nginx provides a mechanism in which its reverse-proxy function can defer the authorization decision to a subrequest, and so offer protected access. Hence, this auth_request interface offers a means to invoke the services of the PEP, whilst maintaining proxy performance. The auth_request approach invokes the subrequest with the expectation to receive one of three possible responses: 2xx (OK) , 401 (Unauthorized) , 403 (Forbidden) . Only 2xx (OK) auth_request responses will permit the onward proxy of the request. Otherwise the 401 / 403 response is returned to the client. In order to inform its decision the PEP is provided with pertinent request information through http headers set by nginx in the subrequest: X-Original-Method (http method of client request); X-Original-Uri (path to the requested resource). The PEP implements the nginx auth_request interface and so returns 2xx , 401 or 403 . In the case of a 401 response, then the PEP expects the client to follow the UMA (User Managed Access) flow, using the ticket that is provided in the Www-Authenticate header it returns with the 401 response. A typical client, such as a browser, is not in a position to follow the UMA flow. Thus, the UMA User Agent performs the role of UMA client on behalf of the end-user client (user agent). The UMA User Agent sits between nginx and the PEP, to intercept the PEP 401 responses (with Www-Authenticate header) to follow the UMA flow, exchanging a ticket for an RPT (Relying Party Token), which can then be re-presented to the PEP and so gain authorization. This flow, and the chaining of the UMA User Agent -> PEP in the nginx auth_request subrequest, is illustrated in the following sequence diagram. Interfaces \u2693\ufe0e HTTP Request \u2693\ufe0e The UMA User Agent supports the following inputs on the http subrequest from nginx: http headers X-Original-Method : http method of client request X-Original-Uri : path to the requested resource Authorization : carrying Bearer token for user ID (optional) X-User-Id : user ID token from OIDC (optional) http cookie auth_user_id : user ID token from OIDC (optional) Cookie name is configurable auth_rpt-<endpoint-name> : RPT from previous successful access (optional) Cookie name is configurable User ID Token There are three means through which the User ID Token (from OIDC) can be presented to the UMA User Agent . These are in priority order : Authorization header as a bearer token - in the form: Authorization: Bearer <token> X-User-Id header auth_user_id cookie (name of cookie is configurable) HTTP Response \u2693\ufe0e The UMA User Agent sets the following headers in the http response: Response 2xx (OK) : X-User-Id : user ID token, to be passed-on to the target Resource Server X-Auth-Rpt : RPT from successful authorization X-Auth-Rpt-Options : cookie options for RPT Response 401 (Unauthorized) : Www-Authenticate: defines http authorization methods Response 403 (Forbidden) : No specific headers OpenAPI Document \u2693\ufe0e TBD Dependencies \u2693\ufe0e The UMA User Agent integrates with: nginx Nginx is configured via its auth_request module to invoke the UMA User Agent before allowing the request. PEP The UMA User Agent relies on the PEP to provide the enforcement decision. This is achieved by chaining the auth_request to the PEP. Authorization Server The UMA User Agent follows the UMA flow by interfacing with the token endpoint of the Authorization Server that is identified in the response received back from the PEP. Additional Information \u2693\ufe0e Describe the configuration of the agent binary, and the configuration of nginx.","title":"UMA User Agent"},{"location":"iam/uma-user-agent/#uma-user-agent","text":"","title":"UMA User Agent"},{"location":"iam/uma-user-agent/#description","text":"The UMA User Agent implements a UMA (User Managed Access) client to obtain an access token on behalf of the end-user. All access attempts to a Resource Server, (e.g. Catalogue, Data Access, ADES, etc.), are subject to the policy enforcement of the PEP (Policy Enforcement Point). For reasons of performance, it is desirable for Nginx to act as the reverse-proxy in this protection flow, rather than the proxy function of the PEP which is not designed for large numbers of concurrent requests or large data volumes. Through the Module ngx_http_auth_request_module , Nginx provides a mechanism in which its reverse-proxy function can defer the authorization decision to a subrequest, and so offer protected access. Hence, this auth_request interface offers a means to invoke the services of the PEP, whilst maintaining proxy performance. The auth_request approach invokes the subrequest with the expectation to receive one of three possible responses: 2xx (OK) , 401 (Unauthorized) , 403 (Forbidden) . Only 2xx (OK) auth_request responses will permit the onward proxy of the request. Otherwise the 401 / 403 response is returned to the client. In order to inform its decision the PEP is provided with pertinent request information through http headers set by nginx in the subrequest: X-Original-Method (http method of client request); X-Original-Uri (path to the requested resource). The PEP implements the nginx auth_request interface and so returns 2xx , 401 or 403 . In the case of a 401 response, then the PEP expects the client to follow the UMA (User Managed Access) flow, using the ticket that is provided in the Www-Authenticate header it returns with the 401 response. A typical client, such as a browser, is not in a position to follow the UMA flow. Thus, the UMA User Agent performs the role of UMA client on behalf of the end-user client (user agent). The UMA User Agent sits between nginx and the PEP, to intercept the PEP 401 responses (with Www-Authenticate header) to follow the UMA flow, exchanging a ticket for an RPT (Relying Party Token), which can then be re-presented to the PEP and so gain authorization. This flow, and the chaining of the UMA User Agent -> PEP in the nginx auth_request subrequest, is illustrated in the following sequence diagram.","title":"Description"},{"location":"iam/uma-user-agent/#interfaces","text":"","title":"Interfaces"},{"location":"iam/uma-user-agent/#http-request","text":"The UMA User Agent supports the following inputs on the http subrequest from nginx: http headers X-Original-Method : http method of client request X-Original-Uri : path to the requested resource Authorization : carrying Bearer token for user ID (optional) X-User-Id : user ID token from OIDC (optional) http cookie auth_user_id : user ID token from OIDC (optional) Cookie name is configurable auth_rpt-<endpoint-name> : RPT from previous successful access (optional) Cookie name is configurable User ID Token There are three means through which the User ID Token (from OIDC) can be presented to the UMA User Agent . These are in priority order : Authorization header as a bearer token - in the form: Authorization: Bearer <token> X-User-Id header auth_user_id cookie (name of cookie is configurable)","title":"HTTP Request"},{"location":"iam/uma-user-agent/#http-response","text":"The UMA User Agent sets the following headers in the http response: Response 2xx (OK) : X-User-Id : user ID token, to be passed-on to the target Resource Server X-Auth-Rpt : RPT from successful authorization X-Auth-Rpt-Options : cookie options for RPT Response 401 (Unauthorized) : Www-Authenticate: defines http authorization methods Response 403 (Forbidden) : No specific headers","title":"HTTP Response"},{"location":"iam/uma-user-agent/#openapi-document","text":"TBD","title":"OpenAPI Document"},{"location":"iam/uma-user-agent/#dependencies","text":"The UMA User Agent integrates with: nginx Nginx is configured via its auth_request module to invoke the UMA User Agent before allowing the request. PEP The UMA User Agent relies on the PEP to provide the enforcement decision. This is achieved by chaining the auth_request to the PEP. Authorization Server The UMA User Agent follows the UMA flow by interfacing with the token endpoint of the Authorization Server that is identified in the response received back from the PEP.","title":"Dependencies"},{"location":"iam/uma-user-agent/#additional-information","text":"Describe the configuration of the agent binary, and the configuration of nginx.","title":"Additional Information"},{"location":"iam/user-profile/","text":"User Profile [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"User Profile [TODO]"},{"location":"iam/user-profile/#user-profile-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"User Profile [TODO]"},{"location":"iam/user-profile/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"iam/user-profile/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"iam/user-profile/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"iam/user-profile/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"processing/ades/","text":"ADES - Application Deployment & Execution Service [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"ADES - Application Deployment & Execution Service [TODO]"},{"location":"processing/ades/#ades-application-deployment-execution-service-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"ADES - Application Deployment &amp; Execution Service [TODO]"},{"location":"processing/ades/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"processing/ades/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"processing/ades/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"processing/ades/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"processing/pde/","text":"PDE - Processor Development Environment [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"PDE - Processor Development Environment [TODO]"},{"location":"processing/pde/#pde-processor-development-environment-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"PDE - Processor Development Environment [TODO]"},{"location":"processing/pde/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"processing/pde/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"processing/pde/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"processing/pde/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"resources/catalogue/","text":"Resource Catalogue [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Resource Catalogue [TODO]"},{"location":"resources/catalogue/#resource-catalogue-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"Resource Catalogue [TODO]"},{"location":"resources/catalogue/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"resources/catalogue/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"resources/catalogue/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"resources/catalogue/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"resources/data-access/","text":"Data Access [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Data Access [TODO]"},{"location":"resources/data-access/#data-access-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"Data Access [TODO]"},{"location":"resources/data-access/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"resources/data-access/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"resources/data-access/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"resources/data-access/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"resources/workspace/","text":"Workspace [TODO] \u2693\ufe0e The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful. Description \u2693\ufe0e Description to include: role in the architecture functional capabilities Interfaces \u2693\ufe0e Specification of interfaces provided by the component. Link to external specifications if applicable. Dependencies \u2693\ufe0e Describe links with other eoepca components - e.g. interfaces consumed. Additional Information \u2693\ufe0e Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Workspace [TODO]"},{"location":"resources/workspace/#workspace-todo","text":"The purpose of this section is to identify the building-block, its role in the architecture, and its relationship to the other building-blocks expressed through the interfaces it provides and consumes. The idea is to provide a singular entrypoint to the EOEPCA building-blocks. In the first instant, gather relevant information from existing docs/wikis where it exists, and collate here. Use dedicated markdown files to separate the sub-section content if needed. Use diagrams where useful.","title":"Workspace [TODO]"},{"location":"resources/workspace/#description","text":"Description to include: role in the architecture functional capabilities","title":"Description"},{"location":"resources/workspace/#interfaces","text":"Specification of interfaces provided by the component. Link to external specifications if applicable.","title":"Interfaces"},{"location":"resources/workspace/#dependencies","text":"Describe links with other eoepca components - e.g. interfaces consumed.","title":"Dependencies"},{"location":"resources/workspace/#additional-information","text":"Include descriptions of anything that is relevant to help users of the component. Links to other relevant information.","title":"Additional Information"},{"location":"system/overview/","text":"Overview [TODO] \u2693\ufe0e High level overview of the system.","title":"Overview [TODO]"},{"location":"system/overview/#overview-todo","text":"High level overview of the system.","title":"Overview [TODO]"}]}